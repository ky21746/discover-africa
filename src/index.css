@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --primary: #F26B38;
  --secondary: #000000;
  --background: #FFFFFF;
  --surface: #F8F8F8;
  --text: #333333;
  --muted: #9B9B9B;
}

* {
  box-sizing: border-box;
}

html {
  direction: rtl;
  font-family: 'Heebo', 'Assistant', sans-serif;
}

body {
  direction: rtl;
  text-align: right;
  font-family: 'Heebo', 'Assistant', sans-serif;
  color: var(--text);
  background-color: var(--background);
  line-height: 1.6;
}

.font-heebo {
  font-family: 'Heebo', sans-serif;
}

.font-assistant {
  font-family: 'Assistant', sans-serif;
}

/* Custom RTL utilities */
.rtl-flip {
  transform: scaleX(-1);
}

.text-right {
  text-align: right !important;
}

/* Button styles */
.btn-primary {
  background-color: var(--primary);
  color: white;
  padding: 12px 18px;
  border-radius: 8px;
  border: none;
  cursor: pointer;
  font-weight: 600;
  font-size: 16px;
  min-height: 44px;
  transition: all 0.2s ease;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
}

.btn-primary:hover {
  background-color: #e55a2b;
  transform: translateY(-1px);
}

.btn-secondary {
  background-color: transparent;
  color: var(--primary);
  border: 2px solid var(--primary);
  padding: 10px 16px;
  border-radius: 8px;
  cursor: pointer;
  font-weight: 600;
  font-size: 16px;
  min-height: 44px;
  transition: all 0.2s ease;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
}

.btn-secondary:hover {
  background-color: var(--primary);
  color: white;
  transform: translateY(-1px);
}

/* Card styles */
.card {
  background: white;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
  display: flex;
  flex-direction: column;
  height: 100%;
}

.card:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.card-image {
  height: 200px;
  background-size: cover;
  background-position: center;
}

.card-content {
  padding: 16px 20px;
  display: flex;
  flex-direction: column;
  flex: 1;
  justify-content: space-between;
}

.card-footer {
  margin-top: auto;
  padding-top: 12px;
}

/* Search highlight */
.search-highlight {
  background-color: #fff3cd;
  padding: 2px 4px;
  border-radius: 3px;
}

/* Form styles */
.form-group {
  margin-bottom: 16px;
}

.form-label {
  display: block;
  font-weight: 600;
  font-size: 13px;
  color: var(--text);
  margin-bottom: 6px;
  text-align: right;
}

.form-input {
  width: 100%;
  padding: 12px 16px;
  border: 2px solid #e1e5e9;
  border-radius: 8px;
  font-size: 16px;
  direction: rtl;
  text-align: right;
  transition: border-color 0.2s ease;
}

.form-input:focus {
  outline: none;
  border-color: var(--primary);
}

.form-input.error {
  border-color: #dc3545;
}

.form-error {
  color: #dc3545;
  font-size: 12px;
  margin-top: 4px;
  text-align: right;
}

/* Navigation */
.nav-link {
  color: var(--text);
  text-decoration: none;
  font-weight: 500;
  padding: 8px 16px;
  border-radius: 8px;
  transition: all 0.2s ease;
}

.nav-link:hover {
  color: var(--primary);
  background-color: var(--surface);
}

.nav-link.active {
  color: var(--primary);
  background-color: var(--surface);
}

/* Responsive utilities */
@media (max-width: 768px) {
  .mobile-hidden {
    display: none !important;
  }
}

/* Animation utilities */
.fade-in {
  animation: fadeIn 0.5s ease-in;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.slide-up {
  animation: slideUp 0.6s ease-out;
}

@keyframes slideUp {
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Smart Agent - Remove all icons and emojis */
.smart-agent [class*="icon"], 
.smart-agent .icon, 
.smart-agent i, 
.smart-agent svg, 
.smart-agent img.icon,
.smart-agent [class*="emoji"],
.smart-agent .summary-icon,
.smart-agent [aria-hidden="true"] {
  display: none !important;
}
.smart-agent *::before,
.smart-agent *::after {
  content: none !important;
}